"""reinitialization after implimenting full text search

Revision ID: 881bbe7b0c00
Revises:
Create Date: 2021-01-22 10:31:12.763156

"""
import os
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy_searchable import sync_trigger
from sqlalchemy.orm import sessionmaker

Session = sessionmaker()


# revision identifiers, used by Alembic.

revision = '881bbe7b0c00'
down_revision = None
branch_labels = None
depends_on = None

def run_sqlalchemy_searchable_sql():
    migrations_folder = os.path.dirname(os.path.abspath(__file__))
    raw_sql = os.path.join(migrations_folder, 'expressions_script/expressions.sql')
    file = open(raw_sql)
    sql_expressions = sa.text(file.read())
    bind = op.get_bind()
    session = Session(bind=bind)
    session.execute(sql_expressions)

def upgrade():
    run_sqlalchemy_searchable_sql()
    conn = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sets',
    sa.Column('set_code', sa.String(length=10), autoincrement=False, nullable=False),
    sa.Column('set_name', sa.String(), nullable=False),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('set_code')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('arena_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('set_code', sa.String(length=10), nullable=True),
    sa.Column('set_number', sa.String(length=10), nullable=True),
    sa.Column('rarity', sa.String(length=10), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('power', sa.String(length=10), nullable=True),
    sa.Column('toughness', sa.String(length=10), nullable=True),
    sa.Column('loyalty', sa.String(length=10), nullable=True),
    sa.Column('mana_cost', sa.String(length=50), nullable=True),
    sa.Column('conv_mana_cost', sa.Float(precision=1), nullable=True),
    sa.Column('keywords', sa.String(length=150), nullable=True),
    sa.Column('rules_text', sa.Text(), nullable=True),
    sa.Column('flavor_text', sa.Text(), nullable=True),
    sa.Column('is_multifaced', sa.Boolean(), nullable=True),
    sa.Column('avg_rating', sa.Float(precision=1), nullable=True),
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.ForeignKeyConstraint(['set_code'], ['sets.set_code'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index('ix_cards_search_vector', 'cards', ['search_vector'], unique=False, postgresql_using='gin')
    sync_trigger(conn, 'cards', 'search_vector', ['name', 'type'])

    op.create_table('decks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('creator_name', sa.String(), nullable=True),
    sa.Column('deck_name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('background_img', sa.String(), nullable=True),
    sa.Column('video_url', sa.String(), nullable=True),
    sa.Column('avg_rating', sa.Float(precision=1), nullable=True),
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.ForeignKeyConstraint(['creator_name'], ['users.username'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index('ix_decks_search_vector', 'decks', ['search_vector'], unique=False, postgresql_using='gin')

    sync_trigger(conn, 'decks', 'search_vector', ['deck_name'])

    op.create_table('alternate_cardfaces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('base_card_uuid', sa.String(), nullable=False),
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('face_change', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('power', sa.String(length=10), nullable=True),
    sa.Column('toughness', sa.String(length=10), nullable=True),
    sa.Column('loyalty', sa.String(length=10), nullable=True),
    sa.Column('keywords', sa.String(length=150), nullable=True),
    sa.Column('rules_text', sa.Text(), nullable=True),
    sa.Column('flavor_text', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['base_card_uuid'], ['cards.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('base_card_uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('deck_cards',
    sa.Column('deck_id', sa.Integer(), nullable=False),
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('in_deck', sa.Integer(), nullable=True),
    sa.Column('in_sideboard', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
    sa.ForeignKeyConstraint(['deck_id'], ['decks.id'], ),
    sa.PrimaryKeyConstraint('deck_id', 'card_id')
    )
    op.create_table('format_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('card_uuid', sa.String(), nullable=False),
    sa.Column('standard', sa.String(length=10), nullable=False),
    sa.Column('future', sa.String(length=10), nullable=False),
    sa.Column('historic', sa.String(length=10), nullable=False),
    sa.Column('pioneer', sa.String(length=10), nullable=False),
    sa.Column('modern', sa.String(length=10), nullable=False),
    sa.Column('legacy', sa.String(length=10), nullable=False),
    sa.Column('pauper', sa.String(length=10), nullable=False),
    sa.Column('vintage', sa.String(length=10), nullable=False),
    sa.Column('penny', sa.String(length=10), nullable=False),
    sa.Column('commander', sa.String(length=10), nullable=False),
    sa.Column('brawl', sa.String(length=10), nullable=False),
    sa.Column('duel', sa.String(length=10), nullable=False),
    sa.Column('oldschool', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['card_uuid'], ['cards.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('card_uuid')
    )
    op.create_table('illustrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('card_uuid', sa.String(), nullable=True),
    sa.Column('alternate_cardface_uuid', sa.String(), nullable=True),
    sa.Column('artist', sa.String(), nullable=True),
    sa.Column('small_image', sa.String(), nullable=False),
    sa.Column('normal_image', sa.String(), nullable=False),
    sa.Column('large_image', sa.String(), nullable=False),
    sa.Column('highres_png', sa.String(), nullable=False),
    sa.Column('art_crop', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['alternate_cardface_uuid'], ['alternate_cardfaces.uuid'], ),
    sa.ForeignKeyConstraint(['card_uuid'], ['cards.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('alternate_cardface_uuid'),
    sa.UniqueConstraint('card_uuid')
    )
    # ### end Alembic commands ###


def downgrade():

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('illustrations')
    op.drop_table('format_lists')
    op.drop_table('deck_cards')
    op.drop_table('alternate_cardfaces')
    op.drop_index('ix_decks_search_vector', table_name='decks')
    op.drop_table('decks')
    op.drop_index('ix_cards_search_vector', table_name='cards')
    op.drop_table('cards')
    op.drop_table('users')
    op.drop_table('sets')
    # ### end Alembic commands ###
